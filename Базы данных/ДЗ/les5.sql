/*Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»*/
-- use exemple;

-- Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

-- Очищаю все в толбцах craeted_at и updated_at

UPDATE users 
SET
	craeted_at = NULL,
	updated_at = NULL;	

-- Заполните их текущими датой и временем.

UPDATE users 
SET
	craeted_at = CURRENT_TIMESTAMP(),
	updated_at = CURRENT_TIMESTAMP(); 

-- Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время 
-- помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.

ALTER TABLE users 
MODIFY COLUMN craeted_at DATETIME,
MODIFY COLUMN updated_at DATETIME;

-- В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 
-- 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, 
-- чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.

SELECT * FROM storehouses_products
ORDER BY 
	CASE 
	WHEN value = '0' THEN 1 ELSE 0
	END, value;

-- (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий (may, august)\
-- (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); 
-- Отсортируйте записи в порядке, заданном в списке IN.

-- Практическое задание теме «Агрегация данных»

-- Подсчитайте средний возраст пользователей в таблице users.



-- Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.
-- (по желанию) Подсчитайте произведение чисел в столбце таблицы.


